from setup import *


def play(notes, mult = 1):
    drive.robot.hub.setVolume(100)
    for freq, duration in notes:
        drive.robot.hub.beep(freq, duration * mult)
        #wait(duration)
        
def rotate():
    drive.robot.lM.setSpeed(100)
    drive.robot.rM.setSpeed(-100)
    play(funkytown, 0.95)


beari = Matrix([
    [0, 0, 0, 0, 0],
    [0, 100, 100, 100, 0],
    [0, 0, 100, 0, 0],
    [0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0]
])

road = Matrix([
    [100, 0, 1000, 0, 100],
    [100, 0, 100, 0, 100],
    [100, 0, 0, 0, 100],
    [100, 0, 100, 0, 100],
    [0, 0, 0, 0, 0]
])

shortroadi = Matrix([
    [100, 0, 0, 0, 100],
    [100, 0, 0, 0, 100],
    [100, 0, 0, 0, 100],
    [100, 0, 0, 0, 100],
    [0, 0, 0, 0, 0]
])

ultraroadi = Matrix([
    [100, 0, 1000, 0, 100],
    [100, 0, 100, 0, 100],
    [0, 0, 0, 0, 0],
    [100, 0, 100, 0, 100],
    [0, 0, 0, 0, 0]
])

smile = Matrix([
    [0, 100, 0, 100, 0],
    [0, 0, 0, 0, 0],
    [100, 0, 0, 0, 100],
    [0, 100, 100, 100, 0],
    [0, 0, 0, 0, 0]
])
sad = Matrix([
    [0, 100, 0, 100, 0],
    [0, 0, 0, 0, 0],
    [0, 100, 100, 100, 0],
    [100, 0, 0, 0, 100],
    [0, 0, 0, 0, 0]
])


fish = Matrix([
    [100, 0, 100, 100, 0],
    [0, 100, 100, 100, 100],
    [100, 0, 100, 100, 0],
    [0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0]
])
fish1 = Matrix([
    [0, 100, 100, 0, 100],
    [100, 100, 100, 100, 0],
    [0, 100, 100, 0, 100],
    [0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0]
])

a = 30
b = 100
c = 55
skull = Matrix([
    [a, a, a, a, a],
    [a, a, a, a, a],
    [a, 0, a, 0, a],
    [0, a, a, a, 0],
    [0, a, 0, a, 0]
])

skull2 = Matrix([
    [a, a, a, a, a],
    [a, a, a, a, a],
    [a, 0, a, b, a],
    [0, a, a, a, 0],
    [0, a, 0, a, 0]
])

d = 100
e = 0
f = 100
s = 100
a1 = Matrix([
    [0, 0, 0, 0, 0],
    [e, e, e, e, e],
    [d, d, d, d, d],
    [0, d, d, d, 0],
    [0, 0, f, 0, 0],
])

a2 = Matrix([
    [0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0],
    [e, e, e, e, e],
    [d, d, d, d, d],
    [0, f, f, f, 0],
])

a3 = Matrix([
    [0, 0, s, 0, 0],
    [0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0],
    [e, e, e, e, e],
    [f, f, f, f, f],
])


a4 = Matrix([
    [0, s, s, s, 0],
    [0, 0, s, 0, 0],
    [0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0],
    [e, e, e, e, e],
])

a5 = Matrix([
    [s, s, f, s, s],
    [0, s, s, s, 0],
    [0, 0, s, 0, 0],
    [0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0],
])

a6 = Matrix([
    [0, 0, 0, 0, 0],
    [s, s, f, s, s],
    [0, s, s, s, 0],
    [0, 0, s, 0, 0],
    [0, 0, 0, 0, 0],
])

arrow = [a1, a2, a3, a4, a5, a6]

funkytown = [
    (523, 250), (523, 250), (440, 250), (523, 250),
    (0, 250), (392, 250), (0, 250), (392, 250),
    (523, 250), (698, 250), (659, 250), (523, 250),
    (0, 500),
    (523, 250), (523, 250), (440, 250), (523, 250),
    (0, 250), (392, 250), (0, 250), (392, 250),
    (523, 250), (698, 250), (659, 250), (523, 250),
    (0, 500),

        (262, 250), (262, 250), (262, 250), (262, 250),
        (330, 500), (330, 250), (330, 250),
        (392, 250), (392, 500),
        (659, 500), (587, 250), (523, 500),

    (523, 250), (523, 250), (440, 250), (523, 250),
    (0, 250), (392, 250), (0, 250), (392, 250),
    (523, 250), (698, 250), (659, 250), (523, 250),
    (0, 500),

        (262, 250), (262, 250), (262, 250), (262, 250),
        (330, 250), (330, 250), (330, 250), (330, 250),
        (392, 250), (392, 250), (392, 250), (392, 250),
        (659, 500), (587, 250), (523, 500),

    (523, 250), (523, 250), (440, 250), (523, 250),
    (0, 250), (392, 250), (0, 250), (392, 250),
    (523, 250), (698, 250), (659, 250), (523, 250),
    (0, 500),
]

megalovania = [
    (294, 125),  # D4
    (294, 125),  # D4
    (587, 250),  # D5
    (440, 250),  # A4
    (415, 125),  # Ab4
    (392, 250),  # G4
    (349, 250),  # F4
    (294, 125),  # D4
    (349, 125),  # F4
    (392, 125),  # G4
    (261, 125), (261, 125), (261, 125), (261, 125),  # C4 x4

    (587, 250),  # D5
    (440, 375),  # A4
    (415, 125),  # Ab4
    (392, 250),  # G4
    (349, 250),  # F4
    (294, 125),  # D4
    (349, 125),  # F4
    (392, 125),  # G4
    (247, 125), (247, 125),  # B3 x2

    (587, 250),  # D5
    (440, 375),  # A4
    (415, 125),  # Ab4
    (392, 250),  # G4
    (349, 250),  # F4
    (294, 125),  # D4
    (349, 125),  # F4
    (392, 125),  # G4
    (233, 62), (233, 62), (233, 62), (233, 62),  # Bb3 x4

    (587, 250),  # D5
    (440, 375),  # A4
    (415, 125),  # Ab4
    (392, 250),  # G4
    (349, 250),  # F4
    (294, 125),  # D4
    (349, 125),  # F4
    (392, 125),  # G4
    (294, 125), (294, 125),  # D4 x2

    (587, 250),  # D5
    (440, 375),  # A4
    (415, 125),  # Ab4
    (392, 250),  # G4
    (349, 250),  # F4
    (294, 125),  # D4
    (349, 125),  # F4
    (392, 125),  # G4
    (261, 125), (261, 125), (261, 125), (261, 125),  # C4 x4

    (587, 250),  # D5
    (440, 375),  # A4
    (415, 125),  # Ab4
    (392, 250),  # G4
    (349, 250),  # F4
    (294, 125),  # D4
    (349, 125),  # F4
    (392, 125),  # G4
    (247, 125), (247, 125),  # B3 x2

    (587, 250),  # D5
    (440, 375),  # A4
    (415, 125),  # Ab4
    (392, 250),  # G4
    (349, 250),  # F4
    (294, 125),  # D4
    (349, 125),  # F4
    (392, 125),  # G4
    (233, 62), (233, 62), (233, 62), (233, 62),  # Bb3 x4

    (587, 250),  # D5
    (440, 375),  # A4
    (415, 125),  # Ab4
    (392, 250),  # G4
    (349, 250),  # F4
    (294, 125),  # D4
    (349, 125),  # F4
    (392, 125),  # G4

    (587, 125), (587, 125),  # D5 x2
    (1175, 250),  # D6
    (880, 250),  # A5
    (831, 125),  # Ab5
    (784, 250),  # G5
    (698, 250),  # F5
    (587, 125),  # D5
    (698, 125),  # F5
    (784, 125),  # G5
    (523, 125), (523, 125),  # C5 x2

    (1175, 250),  # D6
    (880, 250),  # A5
    (831, 125),  # Ab5
    (784, 250),  # G5
    (698, 250),  # F5
    (587, 125),  # D5
    
    (698, 125), (784, 125), (494, 125), (494, 125), (1175, 250), (880, 250), (831, 125), (784, 250),
    (698, 250), (587, 125), (698, 125), (784, 125), (466, 125), (466, 125), (1175, 250), (880, 250),
    (831, 125), (784, 250), (698, 250), (587, 125), (698, 125), (784, 125), (587, 125), (587, 125),
    (1175, 250), (880, 250), (831, 125), (784, 250), (698, 250), (587, 125), (698, 125), (784, 125),
    (523, 125), (523, 125), (1175, 250), (880, 250), (831, 125), (784, 250), (698, 250), (587, 125),
    (698, 125), (784, 125), (494, 125), (494, 125), (1175, 250), (880, 250), (831, 125), (784, 250),
    (698, 250), (587, 125), (698, 125), (784, 125), (466, 125), (466, 125), (1175, 250), (880, 250),
    (831, 125), (784, 250), (698, 250), (587, 125), (698, 125), (784, 125), (698, 250), (698, 125),
    (698, 125), (698, 250), (698, 250), (698, 250), (587, 250), (587, 625), (698, 250), (698, 125),
    (698, 125), (784, 250), (831, 250), (784, 42), (831, 42), (784, 42), (698, 125), (587, 125),
    (698, 125), (784, 125), (698, 250), (698, 125), (698, 125), (784, 250), (831, 125), (880, 250),
    (1046, 250), (880, 375), (1175, 250), (1175, 250), (1175, 125), (880, 125), (1175, 125), (1046, 625),
    (1568, 500), (880, 250), (880, 125), (880, 125), (880, 250), (880, 250), (880, 250), (784, 250),
    (784, 625), (880, 250), (880, 125), (880, 125), (880, 250), (784, 125), (880, 250), (1175, 125),
    (880, 125), (784, 250), (1175, 250), (880, 250), (784, 250), (698, 250), (1046, 250), (784, 250),
    (698, 250), (659, 250), (466, 250), (523, 125), (587, 125), (698, 250), (1046, 1125), (698, 125),
    (587, 125), (698, 125), (784, 125), (831, 125), (784, 125), (698, 125), (587, 125), (831, 63),
    (784, 63), (698, 63), (587, 63), (698, 250), (784, 1125), (831, 250), (880, 125), (1046, 250),
    (880, 125), (831, 125), (784, 125), (698, 125), (587, 125), (659, 125), (698, 250), (784, 250),
    (880, 250), (1046, 250), (1109, 250), (831, 250), (831, 125), (784, 125), (698, 125), (784, 1125),
    (349, 250), (392, 250), (440, 250), (698, 250), (659, 500), (587, 500), (659, 500), (698, 500),
    (784, 500), (659, 500), (880, 1000), (880, 125), (831, 125), (784, 125), (740, 125), (698, 125),
    (659, 125), (622, 125), (587, 125), (554, 1000), (622, 1000), (698, 125), (587, 125), (698, 125),
    (784, 125), (831, 125), (784, 125), (698, 125), (587, 125), (831, 63), (784, 63), (698, 63),
    (587, 63), (698, 250), (784, 1125), (831, 250), (880, 125), (1046, 250), (880, 125), (831, 125),
    (784, 125), (698, 125), (587, 125), (659, 125), (698, 250), (784, 250), (880, 250), (1046, 250),
    (1109, 250), (831, 250), (831, 125), (784, 125), (698, 125), (784, 1125), (349, 250), (392, 250),
    (440, 250), (698, 250), (659, 500), (587, 500), (659, 500), (698, 500), (784, 500), (659, 500),
    (880, 1000), (880, 125), (831, 125), (784, 125), (740, 125), (698, 125), (659, 125), (622, 125),
    (587, 125), (554, 1000), (622, 1000), (233, 1500), (349, 500), (330, 1000), (294, 1000), (349, 4000),
    (233, 1500), (349, 500), (330, 1000), (294, 1000), (294, 1000), (294, 83), (277, 83), (261, 83),
    (247, 83), (233, 83), (220, 83), (208, 83), (196, 83), (185, 83), (175, 83), (165, 83), (156, 83),
    (147, 2000), (233, 1500), (349, 500), (330, 1000), (294, 1000), (349, 2000), (123, 125), (196, 125),
    (349, 125), (294, 125), (392, 250), (349, 125), (261, 125), (294, 125), (261, 250), (220, 250),
    (196, 125),
]